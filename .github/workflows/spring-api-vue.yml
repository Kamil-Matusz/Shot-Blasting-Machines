name: CI Pipeline

on:
  push:
    branches:
      - main
      - '**'
  pull_request:
    branches:
      - main
      - '**'

jobs:
  backend-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 22
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '22'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/api/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven (Skip Tests)
      run: mvn clean install -DskipTests --no-transfer-progress
      working-directory: ./api

    - name: Run tests
      run: mvn test --no-transfer-progress
      working-directory: ./api
      continue-on-error: true

    - name: Post-build steps
      if: success() || failure()
      run: echo "Backend build and test completed"

  frontend-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install
      working-directory: ./client

    - name: Lint the code
      run: npm run lint
      working-directory: ./client
      continue-on-error: true

    - name: Run tests
      run: npm run test:unit
      working-directory: ./client
      continue-on-error: true

    - name: Build the project
      run: npm run build
      working-directory: ./client
      continue-on-error: true

    - name: Post-build steps
      if: success() || failure()
      run: echo "Frontend build and test completed"
